	• When you first create a deployment, it triggers a rollout a new rollout creates a new deployment revision.

	• In the future when the application is upgraded, meaning when the container version is updated to a new one, a new rollout is triggered and a new deployment revision is created named revision two. This helps us keep track of the changes made to our deployment and enables us to roll back to a previous version of deployment if necessary.

	• There are two types of deployment strategies:

		○ Recreate: In this way to upgrade to a newer version is to destroy all PODs and then create newer versions of application instances. The problem with this, as you can imagine, is that during the period after the older versions are down and before any newer version is up, the application is down and inaccessible to users.
	
		○ RollingUpdate: this is the the second strategy where we do not destroy all of them at once. Instead, we take down the older version and bring up a newer version one by one. This way the application never goes down and the upgrade is seamless.

	• Remember, if you do not specify a strategy while creating the deployment, it will assume it to be
Rolling Update.

	• Two ways to upgrade your deployment:

		○ By changing image name in deployment definition file and re apply deployment file
	
		○ Command: Kubectl set image deployment/myapp-deployment \nginx=nginx:1.9.1 (in this you need to make sure that for future deployments deployment definition file is updated)
